function _git_ps1()
{
        # 'git_dir' is absolute path to git repository
        # 'rel' is path relative to top dir in repository
        # 'br' is current branch name, or 'HEAD' if we are on detached HEAD
        local git_dir rel br
        
        # first call to git-rev-parse also checks if we are inside git
        # repository
        # if we are not in git repository, use default prompt, provided in
        # argument
		rel=$(git rev-parse --show-prefix 2>/dev/null) || \
			 { echo "$@" ; return; }
		rel=${rel%\/}
        # get branch name, strip 'refs/heads/' prefix, 
        # and use 'HEAD' for detached HEAD (no branch name)
		br=$(git symbolic-ref HEAD 2>/dev/null)
		br=${br#refs/heads/}
		br=${br:-HEAD}
#         path to top dir of git repository
		loc=${PWD%/$rel}

		 # the following code is important only if you use StGit, 
		 # to note if you are on StGit controlled branch
		 # use second part of conditional if you don't use
		 # StGit
		 git_dir=$(git rev-parse --git-dir)
		 if [ "$br" -a -e "$git_dir/patches/$br" ]; then
             echo "%m:($br) ${loc/*\/}${rel:+/$rel}# "
		 else 
             echo "%m:($br) ${loc/*\/}${rel:+/$rel}> "
		 fi
}

## bash:
#    [ "$PS1" ] && PS1='$(_git_ps1 "\u@\h:\w> ")'

## zsh:
#	function precmd() {
#		PS1=`_git_ps1 '%m:%~%# '`
#	}
# vim:filetype=sh
